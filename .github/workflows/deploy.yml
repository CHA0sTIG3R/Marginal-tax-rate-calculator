name: Deploy
# TODO: Ensure EC2 instance(s) are tagged with: Service=tax-api (or adjust TARGET_TAG_* below).
# TODO: Set APP_DIR to the directory on EC2 that contains docker-compose.yml (e.g., /home/ec2-user/Marginal-tax-rate-calculator).
# TODO: Confirm ECR_REPO name matches the repository you created.

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for OIDC
      contents: read
    env:
      AWS_REGION: us-east-1
      ECR_REPO: tax-api
      TARGET_TAG_KEY: Service
      TARGET_TAG_VALUE: tax-api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::300536313917:role/GitHubOIDCRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repo exists
        id: ecr
        shell: bash
        run: |
          set -euo pipefail
          aws ecr describe-repositories --repository-names "$ECR_REPO" || \
          aws ecr create-repository --repository-name "$ECR_REPO"
          ECR_URI=$(aws ecr describe-repositories \
            --repository-names "$ECR_REPO" \
            --query 'repositories[0].repositoryUri' \
            --output text)
          echo "repositoryUri=$ECR_URI" >> "$GITHUB_OUTPUT"
          # Export registry for later steps and SSM
          echo "ECR_URI=$ECR_URI" >> "$GITHUB_ENV"
          echo "ECR_REGISTRY=${ECR_URI%/*}" >> "$GITHUB_ENV"

      - name: Build and push image to ECR
        env:
          ECR_URI: ${{ steps.ecr.outputs.repositoryUri }}
        shell: bash
        run: |
          set -euo pipefail
          GIT_SHA=${GITHUB_SHA::7}
          aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "${ECR_URI%/*}"
          # TODO: Optionally add build cache and versioned tags (e.g., :latest, :prod, :$GIT_SHA)
          docker build --platform linux/amd64 --provenance=false -t "$ECR_URI:$GIT_SHA" -t "$ECR_URI:prod" .
          docker push "$ECR_URI:$GIT_SHA"
          docker push "$ECR_URI:prod"
          echo "IMAGE_URI=$ECR_URI:$GIT_SHA" >> "$GITHUB_ENV"

      - name: Run one-off data import on EC2
        shell: bash
        run: |
          set -euo pipefail
          : "${APP_DIR:=/home/ec2-user/Marginal-tax-rate-calculator}"
          # TODO: Adjust APP_DIR to your compose folder path.
          aws ssm send-command \
            --targets "Key=tag:${TARGET_TAG_KEY},Values=${TARGET_TAG_VALUE}" \
            --document-name "AWS-RunShellScript" \
            --comment "Run data-import once (idempotent)" \
            --parameters '{"commands":["set -e","cd '"${APP_DIR}"'","aws ecr get-login-password --region '"${AWS_REGION}"' | docker login --username AWS --password-stdin '"${ECR_REGISTRY}"'","docker compose run --rm -e SPRING_PROFILES_ACTIVE=data-import tax_data"]}' \
            --region "$AWS_REGION" \
            --output text

      - name: Deploy on EC2 via SSM
        shell: bash
        run: |
          set -euo pipefail
          : "${APP_DIR:=/home/ec2-user/Marginal-tax-rate-calculator}"
          # TODO: Adjust APP_DIR to your compose folder path.
          aws ssm send-command \
            --targets "Key=tag:${TARGET_TAG_KEY},Values=${TARGET_TAG_VALUE}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy tax-api" \
            --parameters '{"commands":["set -e","cd '"${APP_DIR}"'","aws ecr get-login-password --region '"${AWS_REGION}"' | docker login --username AWS --password-stdin '"${ECR_REGISTRY}"'","docker compose pull","docker compose up -d"]}' \
            --region "$AWS_REGION" \
            --output text
