spring.application.name=Marginal-tax-rate-calculator

# JPA schema management: create-drop, validate, update
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
# TODO: In production use migrations (Flyway/Liquibase) and set
#       spring.jpa.hibernate.ddl-auto=validate (or none). Avoid create-drop on RDS.

# Ingestion API key (required for /api/v1/tax/upload). Leave empty to disable uploads.
app.ingest.api-key=${APP_INGEST_API_KEY:}

# CSV import on startup (requires empty DB)
tax.import-on-startup=${TAX_IMPORT_ON_STARTUP:false}
# TODO: Add an ApplicationRunner (data-import profile) that:
#       1) Tries atomic insert into a marker table (e.g., data_import_lock id=1).
#       2) If already present -> skip import and exit early.
#       3) If inserted -> run import, then update completed_at.
#       Also make import idempotent (upserts/dedup) for safety.
# TODO: Add Flyway and create migration file:
#       src/main/resources/db/migration/V1__create_data_import_lock.sql
#       CREATE TABLE IF NOT EXISTS data_import_lock (
#         id INT PRIMARY KEY,
#         completed_at TIMESTAMP WITH TIME ZONE
#       );
tax.s3-bucket=${TAX_S3_BUCKET:}
tax.s3-key=${TAX_S3_KEY:}

# Database connection (PostgreSQL example)
spring.datasource.url=${SPRING_DATASOURCE_URL:}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:}

# TODO: Enable Tomcat access logs (access log goes to container filesystem by default)
# server.tomcat.accesslog.enabled=true
# server.tomcat.accesslog.rotate=true
# server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D "%{User-Agent}i"

# TODO: Add request correlation id (rid) to log pattern (requires RequestLoggingFilter using MDC)
# logging.pattern.level=%5p rid=%X{rid}
